<script>
  function columnChart(params) {
    var h = parseInt(this.style("height"));
    var w = parseInt(this.style("width"));
    var margin = {
      top: 5,
      bottom: 20,
      left: 100,
      right: 10
    };

    var xScale = d3.scaleLinear()
      .domain([0, d3.max(params.data, function(d) {
        return d.value;
      })])
      .range([margin.left, w - margin.right]);

    var yScale = d3.scaleBand()
      .domain(params.data.map(function(entry) {
        return entry.key;
      }))
      .range([margin.top, h - margin.bottom]);

    var ColorScale = d3.scaleOrdinal(d3.schemeCategory10);

    var xAxis = d3.axisBottom()
      .scale(xScale)
      .ticks(7);

    var yAxis = d3.axisLeft()
      .scale(yScale);

    this.selectAll(".bar")
      .data(params.data)
      .enter()
      .append("rect")
      .attr("class", "bar")
      .attr("fill", function(d, i) {
        return ColorScale(i);
      })
      .attr("x", margin.left)
      .attr("y", function(d, i) {
        return yScale(d.key);
      })
      .attr("width", 0)
      .attr("height", function(d) {
        return yScale.bandwidth();
      })
      .transition()
      .duration(500)
      .delay(function(d, i) {
        return i * 200;
      })
      .attr("width", function(d) {
        return xScale(d.value) - margin.left;
      });

    this.selectAll(".bar-label")
      .data(params.data)
      .enter()
      .append("text")
      .text(function(d) {
        return d.value;
      })
      .classed("bar-label", true)
      .attr("x", function(d) {
        return xScale(d.value) - 5;
      })
      .attr("y", function(d, i) {
        return yScale(d.key);
      })
      .attr("dx", 3)
      .attr("dy", function(d) {
        return yScale.bandwidth() / 1.5;
      });

    this.append("g")
      .attr("transform", "translate(0, " + (h - margin.bottom) + ")")
      .call(xAxis);

    this.append("g")
      .attr("transform", "translate(" + margin.left + ", 0)")
      .call(yAxis);
  }

  function lineChart(params) {
    var h = parseInt(this.style("height"));
    var w = parseInt(this.style("width"));

    var margin = {
      top: 5,
      bottom: 20,
      left: 40,
      right: 10
    };

    var dateParser = d3.timeParse("%Y-%m-%d");

    var xScale = d3.scaleTime()
      .domain(d3.extent(params.data, function(d) {
        return dateParser(d.key);
      }))
      .range([margin.left, w - margin.right]);

    var yScale = d3.scaleLinear()
      .domain([0, d3.max(params.data, function(d) {
        return d.value;
      })])
      .range([h - margin.bottom, margin.top]);

    var xAxis = d3.axisBottom()
      .scale(xScale);

    var yAxis = d3.axisLeft()
      .scale(yScale)
      .ticks(5);

    this.append("g")
      .classed("x axis", true)
      .attr("transform", "translate(0, " + (h - margin.bottom) + ")")
      .call(xAxis);

    this.append("g")
      .classed("y axis", true)
      .attr("transform", "translate(" + margin.left + ", 0)")
      .call(yAxis);

    // enter()
    this.selectAll(".point")
      .data(params.data)
      .enter()
      .append("circle")
      .classed("point", true)
      .attr("r", 2)
      .attr("fill", "red");

    // update
    this.selectAll(".point")
      .attr("cx", function(d) {
        return xScale(dateParser(d.key));
      })
      .attr("cy", function(d) {
        return yScale(d.value);
      });

    // exit
    this.selectAll(".point")
      .data(params.data)
      .exit()
      .remove();

    // var chart = this.append("g")
    //   .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");
    //


      // .attr("fill", function(d, i) {
      //   return ColorScale(i);
      // })
      // .attr("x", margin.left)
      // .attr("y", function(d, i) {
      //   return yScale(d.key);
      // })
      // .attr("width", 0)
      // .attr("height", function(d) {
      //   return yScale.bandwidth();
      // })
      // .transition()
      // .duration(500)
      // .delay(function(d, i) {
      //   return i * 200;
      // })
      // .attr("width", function(d) {
      //   return xScale(d.value) - margin.left;
      // });

    // chart.selectAll(".bar-label")
    //   .data(params.data)
    //   .enter()
    //   .append("text")
    //   .text(function(d) {
    //     return d.value;
    //   })
    //   .classed("bar-label", true)
    //   .attr("x", function(d) {
    //     return xScale(d.key);
    //   })
    //   .attr("y", function(d, i) {
    //     return yScale(d.value);
    //   })
    //   .attr("dx", 3)
    //   .attr("dy", function(d) {
    //     return yScale.bandwidth() / 1.5;
    //   });
    //
    // chart.append("g")
    //   .attr("transform", "translate(0, " + (h - margin.bottom) + ")")
    //   .call(xAxis);
    //
    // chart.append("g")
    //   .attr("transform", "translate(" + margin.left + ", 0)")
    //   .call(yAxis);
  }

  $(function() {
    var dashboard = d3.select(".dashboard")

    // Costs
    var costs = <%= @costs.to_json.html_safe %>;

    var costsPanel = dashboard.append("div")
      .classed("row", true)
      .append("div")
      .classed("col-md-12", true)
      .append("div")
      .classed("panel panel-blue", true);

    costsPanel.append("div")
      .classed("panel-heading", true)
      .text("Расходы");

    var costsSvg = costsPanel.append("div")
      .classed("panel-body", true)
      .append("svg")
      .attr("height", "100%")
      .attr("width", "100%");

    lineChart.call(costsSvg, {
      data: costs
    });

    // Categories
    var categories = <%= @categories.to_json.html_safe %>;
    var categoriesPanel = dashboard.append("div")
      .classed("row", true)
      .append("div")
      .classed("col-md-12", true)
      .append("div")
      .classed("panel panel-blue", true);

    categoriesPanel.append("div")
    .classed("panel-heading", true)
    .text("Категории");

    var categoriesSvg = categoriesPanel.append("div")
    .classed("panel-body", true)
    .append("svg")
    .attr("height", "100%")
    .attr("width", "100%");

    columnChart.call(categoriesSvg, {
      data: categories
    });

    // Users
    var users = <%= @users.to_json.html_safe %>;
    var usersPanel = dashboard.append("div")
      .classed("row", true)
      .append("div")
      .classed("col-md-12", true)
      .append("div")
      .classed("panel panel-blue", true);

    usersPanel.append("div")
      .classed("panel-heading", true)
      .text("Семья");

    var usersSvg = usersPanel.append("div")
      .classed("panel-body", true)
      .append("svg")
      .attr("height", "100%")
      .attr("width", "100%");

    columnChart.call(usersSvg, {
      data: users
    });
  });
</script>

<style>
  .domain, .tick line {
    stroke: white;
  }
  .tick text {
    fill: white;
  }
</style>

<div class="dashboard">
</div>
